#!/usr/bin/env bash
[[ -v VERBOSE ]] && set -x
set -eu

#
# deploy-github-bot is an opinionated utility
# to deploy a google cloud run workload with unauthenticated access
#

# prints an info log to stdout
info() {
  echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')][$(basename "$0")][inf]: $*"
}

# prints a warn log to stdout
warn() {
  echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')][$(basename "$0")][wrn]: $*"
}

# prints an error to stderr and exits with code 1
err() {
  echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')][$(basename "$0")][err]: $*" >&2
  exit 1
}

PROGNAME=$(basename "$0")

usage() {
    if [ "$*" != "" ] ; then
        err "$*"
    fi

    cat << EOF
Usage: $PROGNAME [OPTION ...]
Opinionated utility to deploy a GitHub Bot to Cloud Run (fully-managed)

Requires:
  - gsutil
  - gcloud

Options:
-h, --help display this usage message and exit
-n, --name <name> bot name
-c, --config <file> config file to use
-b, --bucket <name> google cloud storage bucket to use for the bot config
-i, --image <name> container image to run
-t, --tag <name> (optional) container tag; latest ^v.* tag is used if not set 
-s, --service-account <name> google cloud service account to run with
EOF

    exit 1
}

name=""
config=""
bucket=""
image=""
service_account=""
tag=""

while [ $# -gt 0 ] ; do
    case "$1" in
    -h|--help)
        usage
        ;;
    -n|--name)
        name="$2"
        shift
        ;;
    -c|--config)
        config="$2"
        shift
        ;;
    -b|--bucket)
        bucket="$2"
        shift
        ;;
    -i|--image)
        image="$2"
        shift
        ;;
    -t|--tag)
        tag="$2"
        shift
        ;;
    -s|--service-account)
        service_account="$2"
        shift
        ;;
    -*)
        usage "Unknown option '$1'"
        ;;
    *)
        usage "Too many arguments"
        ;;
    esac
    shift
done

[[ -z "${name}" ]] && err "--name is required"
[[ -z "${config}" ]] && err "--config is required"
[[ -z "${bucket}" ]] && err "--bucket is required"
[[ -z "${image}" ]] && err "--image is required"
[[ -z "${service_account}" ]] && err "--service-acount is required"

info "checking if config was opened up by sops"
if grep -q "sops" < "${config}"; then
  err "config is still encrypted"
else
  info "config was opened"
fi

info "uploading config"
gsutil cp "${config}" "gs://${bucket}"

[[ -z "${tag}" ]] && tag=$(gcloud container images list-tags "${image}" --limit=1 --sort-by='~timestamp' --format="value(tags)" --filter="tags ~ ^v")
info "found tag: ${tag} for ${image}"

gcloud run deploy "${name}" --platform managed --region europe-west4 --allow-unauthenticated \
  --set-env-vars "GCS_BUCKET=${bucket},GCS_OBJECT=${config}" \
  --service-account "${service_account}" \
  --image "${image}:${tag}"

info "done"
exit 0
