#!/usr/bin/env bash
[[ -v VERBOSE ]] && set -x
set -eou pipefail
KUBECONFIG=~/.kube/config
# Utility to deploy secrets for Argo CD:
# - use kubectl to check if the secret is present
# - decrypt on disk using gcloud kms
# - create secret
# - remove encrypted secret from disk
#
# Requires:
# - gcloud
# - kubectl
# - KUBECONFIG environment variable to be set by Makefile

[[ -z "${KUBECONFIG}" ]] && { echo >&2 "KUBECONFIG is not set"; exit 1; }

argocd_ssh_key() {
  path=${ROOT}/infrastructure/kubernetes/resources/credentials

  if [[ ! $(kubectl -n {{cookiecutter.k8s_namespace}} get secret argocd-manifests-key) ]]; then
    gcloud kms decrypt \
      --project {{cookiecutter.gcp_project_stripped}}-stage \
      --ciphertext-file="${path}/id_rsa.enc" \
      --plaintext-file="${path}/id_rsa" \
      --location=global --keyring=default-keyring --key=default
    kubectl -n {{cookiecutter.k8s_namespace}} create secret generic argocd-manifests-key \
      --from-file=ssh-privatekey="${path}/id_rsa" \
      --from-file=ssh-publickey="${path}/id_rsa.pub"
    rm "${path}/id_rsa"
  fi

  echo "argocd ssh key: ok"
}

argocd_ssh_key

exit 0
